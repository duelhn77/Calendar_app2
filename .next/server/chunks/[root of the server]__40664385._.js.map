{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hiros/OneDrive%20-%20%E6%88%90%E7%94%B0%E5%BC%98/Tech0/VS%20Code/Git_Clone_calendar_app/Calendar_app2/src/app/api/updateBudget/route.ts"],"sourcesContent":["import { google } from \"googleapis\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nexport async function POST(req: Request) {\r\n    const { engagement, activityId, newBudget } = await req.json();\r\n  \r\n    try {\r\n      const auth = new google.auth.GoogleAuth({\r\n        credentials: {\r\n          type: \"service_account\",\r\n          project_id: process.env.GOOGLE_PROJECT_ID,\r\n          private_key: process.env.GOOGLE_PRIVATE_KEY?.replace(/\\\\n/g, \"\\n\"),\r\n          client_email: process.env.GOOGLE_CLIENT_EMAIL,\r\n        },\r\n        scopes: [\"https://www.googleapis.com/auth/spreadsheets\"],\r\n      });\r\n  \r\n      const sheets = google.sheets({ version: \"v4\", auth });\r\n  \r\n      const sheetId = process.env.SHEET_ID || \"\";\r\n  \r\n      const res = await sheets.spreadsheets.values.get({\r\n        spreadsheetId: sheetId,\r\n        range: \"Activities!A:D\", // Engagement, ActivityID, Activity名, 予算\r\n      });\r\n  \r\n      const rows = res.data.values || [];\r\n      const targetRowIndex = rows.findIndex(\r\n        (r) => r[0] === engagement && r[1] === activityId\r\n      );\r\n  \r\n      if (targetRowIndex === -1) {\r\n        throw new Error(\"該当のアクティビティが見つかりません\");\r\n      }\r\n  \r\n      const rangeToUpdate = `Activities!D${targetRowIndex + 1}`;\r\n      await sheets.spreadsheets.values.update({\r\n        spreadsheetId: sheetId,\r\n        range: rangeToUpdate,\r\n        valueInputOption: \"USER_ENTERED\",\r\n        requestBody: {\r\n          values: [[newBudget.toString()]],\r\n        },\r\n      });\r\n  \r\n      return NextResponse.json({ success: true });\r\n    } catch (error) {\r\n      console.error(\"❌ 予算更新エラー:\", error);\r\n      return NextResponse.json({ error: \"予算更新に失敗しました\" }, { status: 500 });\r\n    }\r\n  }\r\n  "],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,GAAY;IACnC,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,IAAI;IAE5D,IAAI;QACF,MAAM,OAAO,IAAI,qJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACtC,aAAa;gBACX,MAAM;gBACN,YAAY,QAAQ,GAAG,CAAC,iBAAiB;gBACzC,aAAa,QAAQ,GAAG,CAAC,kBAAkB,EAAE,QAAQ,QAAQ;gBAC7D,cAAc,QAAQ,GAAG,CAAC,mBAAmB;YAC/C;YACA,QAAQ;gBAAC;aAA+C;QAC1D;QAEA,MAAM,SAAS,qJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAAE,SAAS;YAAM;QAAK;QAEnD,MAAM,UAAU,QAAQ,GAAG,CAAC,QAAQ,IAAI;QAExC,MAAM,MAAM,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC;YAC/C,eAAe;YACf,OAAO;QACT;QAEA,MAAM,OAAO,IAAI,IAAI,CAAC,MAAM,IAAI,EAAE;QAClC,MAAM,iBAAiB,KAAK,SAAS,CACnC,CAAC,IAAM,CAAC,CAAC,EAAE,KAAK,cAAc,CAAC,CAAC,EAAE,KAAK;QAGzC,IAAI,mBAAmB,CAAC,GAAG;YACzB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,gBAAgB,CAAC,YAAY,EAAE,iBAAiB,GAAG;QACzD,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC;YACtC,eAAe;YACf,OAAO;YACP,kBAAkB;YAClB,aAAa;gBACX,QAAQ;oBAAC;wBAAC,UAAU,QAAQ;qBAAG;iBAAC;YAClC;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,cAAc;QAC5B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAc,GAAG;YAAE,QAAQ;QAAI;IACnE;AACF","debugId":null}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}