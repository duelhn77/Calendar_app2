{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hiros/OneDrive%20-%20%E6%88%90%E7%94%B0%E5%BC%98/Tech0/VS%20Code/Git_Clone_calendar_app/Calendar_app2/src/app/api/exportData/route.ts"],"sourcesContent":["import { google } from \"googleapis\";\r\nimport { NextResponse } from \"next/server\";\r\nimport { parse } from \"json2csv\";\r\nimport ExcelJS from \"exceljs\";\r\n\r\nconst SHEET_ID = process.env.SHEET_ID || \"\";\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const { startDate, endDate, format, userId } = await req.json(); // üîπ `userId` „ÇíËøΩÂä†\r\n\r\n    console.log(\"üì§ API Âèó‰ø°:\", { startDate, endDate, format, userId });\r\n\r\n    const auth = new google.auth.GoogleAuth({\r\n      credentials: {\r\n        type: \"service_account\",\r\n        project_id: process.env.GOOGLE_PROJECT_ID,\r\n        private_key: process.env.GOOGLE_PRIVATE_KEY?.replace(/\\\\n/g, \"\\n\"),\r\n        client_email: process.env.GOOGLE_CLIENT_EMAIL,\r\n      },\r\n      scopes: [\"https://www.googleapis.com/auth/spreadsheets.readonly\"],\r\n    });\r\n\r\n    const sheets = google.sheets({ version: \"v4\", auth });\r\n\r\n    // ‚úÖ „Çπ„Éó„É¨„ÉÉ„Éâ„Ç∑„Éº„Éà„Åã„Çâ„Éá„Éº„Çø„ÇíÂèñÂæó\r\n    const response = await sheets.spreadsheets.values.get({\r\n      spreadsheetId: SHEET_ID,\r\n      range: \"TimeSheet!A:Z\", // üîπ „Ç´„É©„É†Êï∞„ÅåÂ§âÂãï„Åó„Å¶„ÇÇÂÖ®„Å¶ÂèñÂæó\r\n    });\r\n\r\n    const rows = response.data.values || [];\r\n    console.log(\"üìä ÂèñÂæó„Éá„Éº„Çø:\", rows.length, \"‰ª∂\");\r\n\r\n    if (rows.length < 2) throw new Error(\"„Éá„Éº„Çø„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì\");\r\n\r\n    const headers = rows[0]; // üîπ „Éò„ÉÉ„ÉÄ„ÉºË°å\r\n    const dataRows = rows.slice(1); // üîπ ÂÆü„Éá„Éº„Çø\r\n\r\n    // üîπ „Éò„ÉÉ„ÉÄ„Éº„Åã„Çâ„Ç´„É©„É†„ÅÆ„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÇíÂèñÂæó\r\n    const userIdIndex = headers.indexOf(\"UserID\");\r\n    const startIndex = headers.indexOf(\"Start\");\r\n    const endIndex = headers.indexOf(\"End\");\r\n\r\n    if (userIdIndex === -1 || startIndex === -1 || endIndex === -1) {\r\n      throw new Error(\"ÂøÖË¶Å„Å™„Ç´„É©„É†„Åå„Çπ„Éó„É¨„ÉÉ„Éâ„Ç∑„Éº„Éà„Å´Ë¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì\");\r\n    }\r\n\r\n    // ‚úÖ „É¶„Éº„Ç∂„ÉºID„Å®ÊúüÈñì„Åß„Éï„Ç£„É´„Çø„É™„É≥„Ç∞\r\n    const filteredData = dataRows.filter(row => {\r\n      const rowUserId = row[userIdIndex]; // `UserID` „ÅÆ„Ç´„É©„É†\r\n      const rowStart = new Date(row[startIndex]); // `Start` „ÅÆ„Ç´„É©„É†\r\n      const rowEnd = new Date(row[endIndex]);   // `End` „ÅÆ„Ç´„É©„É†\r\n\r\n      const rowStartDate = rowStart.toISOString().split(\"T\")[0];\r\n      const rowEndDate = rowEnd.toISOString().split(\"T\")[0];\r\n\r\n      // ‚úÖ `userId` „ÅåÊåáÂÆö„Åï„Çå„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÅØ„ÄÅ„Åù„ÅÆ„É¶„Éº„Ç∂„Éº„ÅÆ„Åø„ÇíÊäΩÂá∫\r\n      const userFilter = userId ? rowUserId === userId : true;\r\n      const dateFilter = rowStartDate >= startDate && rowEndDate <= endDate;\r\n\r\n      return userFilter && dateFilter;\r\n    });\r\n\r\n    console.log(\"üìä „Éï„Ç£„É´„ÇøÂæå:\", filteredData.length, \"‰ª∂\");\r\n\r\n    if (!filteredData.length) throw new Error(\"ÊåáÂÆöÊúüÈñì„ÅÆ„Éá„Éº„Çø„Åå„ÅÇ„Çä„Åæ„Åõ„Çì\");\r\n\r\n    let fileBuffer;\r\n    let contentType;\r\n    let fileExtension;\r\n\r\n    if (format === \"csv\") {\r\n      // ‚úÖ CSV ÂΩ¢Âºè„Åß„Ç®„ÇØ„Çπ„Éù„Éº„Éà\r\n      const csv = parse(filteredData, {\r\n        fields: headers,\r\n        quote: '\"',\r\n        delimiter: \",\",\r\n      });\r\n\r\n      fileBuffer = Buffer.from(csv, \"utf-8\");\r\n      contentType = \"text/csv\";\r\n      fileExtension = \"csv\";\r\n    } else {\r\n      // ‚úÖ Excel ÂΩ¢Âºè„Åß„Ç®„ÇØ„Çπ„Éù„Éº„Éà\r\n      const workbook = new ExcelJS.Workbook();\r\n      const worksheet = workbook.addWorksheet(\"Exported Data\");\r\n\r\n      worksheet.addRow(headers);\r\n      filteredData.forEach(row => worksheet.addRow(row));\r\n\r\n      fileBuffer = await workbook.xlsx.writeBuffer();\r\n      contentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\r\n      fileExtension = \"xlsx\";\r\n    }\r\n\r\n    console.log(\"üìÇ „Éï„Ç°„Ç§„É´ÁîüÊàêÂÆå‰∫Ü: export.\" + fileExtension);\r\n\r\n    return new Response(fileBuffer, {\r\n      headers: {\r\n        \"Content-Type\": contentType,\r\n        \"Content-Disposition\": `attachment; filename=\"export_${startDate}_${endDate}.${fileExtension}\"`,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error(\"‚ùå „Ç®„ÇØ„Çπ„Éù„Éº„Éà„Ç®„É©„Éº:\", error);\r\n    return NextResponse.json({ \r\n      error: (error as Error).message, \r\n      stack: (error as Error).stack\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 383, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}