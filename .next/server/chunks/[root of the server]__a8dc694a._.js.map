{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hiros/OneDrive%20-%20%E6%88%90%E7%94%B0%E5%BC%98/Tech0/VS%20Code/Git_Clone_calendar_app/Calendar_app2/src/app/api/userMonthlySummary/route.ts"],"sourcesContent":["// src/app/api/userMonthlySummary/route.ts\r\nimport { google } from \"googleapis\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nconst SHEET_ID = process.env.SHEET_ID || \"\";\r\n\r\nexport async function GET() {\r\n  try {\r\n    const auth = new google.auth.GoogleAuth({\r\n      credentials: {\r\n        type: \"service_account\",\r\n        project_id: process.env.GOOGLE_PROJECT_ID,\r\n        private_key: process.env.GOOGLE_PRIVATE_KEY?.replace(/\\\\n/g, \"\\n\"),\r\n        client_email: process.env.GOOGLE_CLIENT_EMAIL,\r\n      },\r\n      scopes: [\"https://www.googleapis.com/auth/spreadsheets.readonly\"],\r\n    });\r\n\r\n    const sheets = google.sheets({ version: \"v4\", auth });\r\n\r\n    const timeRes = await sheets.spreadsheets.values.get({\r\n      spreadsheetId: SHEET_ID,\r\n      range: \"TimeSheet!A2:J\",\r\n    });\r\n    const rows = timeRes.data.values || [];\r\n\r\n    // 集計用マップ: { userName + month -> totalHours }\r\n    const summaryMap = new Map<string, { userName: string; month: string; totalHours: number }>();\r\n\r\n    for (const row of rows) {\r\n      const userName = row[3]; // D列\r\n      const start = new Date(row[4]); // E列\r\n      const end = new Date(row[5]); // F列\r\n      if (!userName || isNaN(start.getTime()) || isNaN(end.getTime())) continue;\r\n\r\n      const duration = (end.getTime() - start.getTime()) / (1000 * 60 * 60); // 時間\r\n      const month = `${start.getFullYear()}-${String(start.getMonth() + 1).padStart(2, \"0\")}`;\r\n      const key = `${userName}__${month}`;\r\n\r\n      const prev = summaryMap.get(key);\r\n      summaryMap.set(key, {\r\n        userName,\r\n        month,\r\n        totalHours: (prev?.totalHours || 0) + duration,\r\n      });\r\n    }\r\n\r\n    const result = Array.from(summaryMap.values()).map((row) => ({\r\n      ...row,\r\n      totalHours: parseFloat(row.totalHours.toFixed(2))\r\n    }));\r\n\r\n    return NextResponse.json(result);\r\n  } catch (error) {\r\n    console.error(\"❌ 月別ユーザー実績エラー:\", error);\r\n    return NextResponse.json({ error: (error as Error).message }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,0CAA0C;;;;AAC1C;AACA;;;AAEA,MAAM,WAAW,QAAQ,GAAG,CAAC,QAAQ,IAAI;AAElC,eAAe;IACpB,IAAI;QACF,MAAM,OAAO,IAAI,qJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACtC,aAAa;gBACX,MAAM;gBACN,YAAY,QAAQ,GAAG,CAAC,iBAAiB;gBACzC,aAAa,QAAQ,GAAG,CAAC,kBAAkB,EAAE,QAAQ,QAAQ;gBAC7D,cAAc,QAAQ,GAAG,CAAC,mBAAmB;YAC/C;YACA,QAAQ;gBAAC;aAAwD;QACnE;QAEA,MAAM,SAAS,qJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAAE,SAAS;YAAM;QAAK;QAEnD,MAAM,UAAU,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC;YACnD,eAAe;YACf,OAAO;QACT;QACA,MAAM,OAAO,QAAQ,IAAI,CAAC,MAAM,IAAI,EAAE;QAEtC,6CAA6C;QAC7C,MAAM,aAAa,IAAI;QAEvB,KAAK,MAAM,OAAO,KAAM;YACtB,MAAM,WAAW,GAAG,CAAC,EAAE,EAAE,KAAK;YAC9B,MAAM,QAAQ,IAAI,KAAK,GAAG,CAAC,EAAE,GAAG,KAAK;YACrC,MAAM,MAAM,IAAI,KAAK,GAAG,CAAC,EAAE,GAAG,KAAK;YACnC,IAAI,CAAC,YAAY,MAAM,MAAM,OAAO,OAAO,MAAM,IAAI,OAAO,KAAK;YAEjE,MAAM,WAAW,CAAC,IAAI,OAAO,KAAK,MAAM,OAAO,EAAE,IAAI,CAAC,OAAO,KAAK,EAAE,GAAG,KAAK;YAC5E,MAAM,QAAQ,GAAG,MAAM,WAAW,GAAG,CAAC,EAAE,OAAO,MAAM,QAAQ,KAAK,GAAG,QAAQ,CAAC,GAAG,MAAM;YACvF,MAAM,MAAM,GAAG,SAAS,EAAE,EAAE,OAAO;YAEnC,MAAM,OAAO,WAAW,GAAG,CAAC;YAC5B,WAAW,GAAG,CAAC,KAAK;gBAClB;gBACA;gBACA,YAAY,CAAC,MAAM,cAAc,CAAC,IAAI;YACxC;QACF;QAEA,MAAM,SAAS,MAAM,IAAI,CAAC,WAAW,MAAM,IAAI,GAAG,CAAC,CAAC,MAAQ,CAAC;gBAC3D,GAAG,GAAG;gBACN,YAAY,WAAW,IAAI,UAAU,CAAC,OAAO,CAAC;YAChD,CAAC;QAED,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kBAAkB;QAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,AAAC,MAAgB,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF","debugId":null}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}