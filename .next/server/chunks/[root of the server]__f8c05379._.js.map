{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hiros/OneDrive%20-%20%E6%88%90%E7%94%B0%E5%BC%98/Tech0/VS%20Code/Git_Clone_calendar_app/Calendar_app2/src/app/api/deleteEvent/route.ts"],"sourcesContent":["import { google } from \"googleapis\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nconst SHEET_ID = process.env.SHEET_ID || \"\";\r\n\r\nexport async function POST(req: Request) {\r\n    try {\r\n      const { id } = await req.json();\r\n  \r\n      const auth = new google.auth.GoogleAuth({\r\n        credentials: {\r\n          type: \"service_account\",\r\n          project_id: process.env.GOOGLE_PROJECT_ID,\r\n          private_key: process.env.GOOGLE_PRIVATE_KEY?.replace(/\\\\n/g, \"\\n\"),\r\n          client_email: process.env.GOOGLE_CLIENT_EMAIL,\r\n        },\r\n        scopes: [\"https://www.googleapis.com/auth/spreadsheets\"],\r\n      });\r\n  \r\n      const sheets = google.sheets({ version: \"v4\", auth });\r\n  \r\n      // スプレッドシートのデータ取得\r\n      const response = await sheets.spreadsheets.values.get({\r\n        spreadsheetId: SHEET_ID,\r\n        range: \"TimeSheet!A:J\",\r\n      });\r\n  \r\n      const rows = response.data.values || [];\r\n      const rowIndex = rows.findIndex((row) => row[0] === id);\r\n  \r\n      if (rowIndex === -1) {\r\n        throw new Error(\"❌ 削除対象のデータが見つかりません\");\r\n      }\r\n  \r\n      await sheets.spreadsheets.batchUpdate({\r\n        spreadsheetId: SHEET_ID,\r\n        requestBody: {\r\n          requests: [\r\n            {\r\n              deleteDimension: {\r\n                range: {\r\n                  sheetId: 0,\r\n                  dimension: \"ROWS\",\r\n                  startIndex: rowIndex,\r\n                  endIndex: rowIndex + 1,\r\n                },\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      });\r\n  \r\n      return NextResponse.json({ message: \"Event deleted successfully\" });\r\n    } catch (error) {\r\n      console.error(\"❌ Google Sheets API 削除エラー:\", error);\r\n      return NextResponse.json({ error: (error as Error).message }, { status: 500 });\r\n    }\r\n  }\r\n  "],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,WAAW,QAAQ,GAAG,CAAC,QAAQ,IAAI;AAElC,eAAe,KAAK,GAAY;IACnC,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,IAAI,IAAI;QAE7B,MAAM,OAAO,IAAI,qJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACtC,aAAa;gBACX,MAAM;gBACN,YAAY,QAAQ,GAAG,CAAC,iBAAiB;gBACzC,aAAa,QAAQ,GAAG,CAAC,kBAAkB,EAAE,QAAQ,QAAQ;gBAC7D,cAAc,QAAQ,GAAG,CAAC,mBAAmB;YAC/C;YACA,QAAQ;gBAAC;aAA+C;QAC1D;QAEA,MAAM,SAAS,qJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAAE,SAAS;YAAM;QAAK;QAEnD,iBAAiB;QACjB,MAAM,WAAW,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC;YACpD,eAAe;YACf,OAAO;QACT;QAEA,MAAM,OAAO,SAAS,IAAI,CAAC,MAAM,IAAI,EAAE;QACvC,MAAM,WAAW,KAAK,SAAS,CAAC,CAAC,MAAQ,GAAG,CAAC,EAAE,KAAK;QAEpD,IAAI,aAAa,CAAC,GAAG;YACnB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,OAAO,YAAY,CAAC,WAAW,CAAC;YACpC,eAAe;YACf,aAAa;gBACX,UAAU;oBACR;wBACE,iBAAiB;4BACf,OAAO;gCACL,SAAS;gCACT,WAAW;gCACX,YAAY;gCACZ,UAAU,WAAW;4BACvB;wBACF;oBACF;iBACD;YACH;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAA6B;IACnE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,AAAC,MAAgB,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF","debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}